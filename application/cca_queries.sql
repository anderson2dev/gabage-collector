-- Quais são as três famílias com a maior renda média em cada município?
SELECT cd_ibge, id_familia, vlr_renda_media_fam  FROM (SELECT cd_ibge, id_familia, vlr_renda_media_fam, ROW_NUMBER() OVER (PARTITION BY cd_ibge ORDER BY vlr_renda_media_fam DESC) as rn      FROM tb_familia ) tmp  WHERE rn <= 3;
-- Liste os nomes dos 10 municípios pela maior remuneração de trabalho para pessoas entre 25 e 35 anos.
SELECT m.nome_municipio, SUM(t.val_remuner_emprego_memb) AS renda_total FROM tb_mun AS m INNER JOIN tb_familia AS f ON m.cd_ibge = f.cd_ibge INNER JOIN tb_trab AS t ON f.id_familia = t.id_familia INNER JOIN tb_pessoa AS p ON t.id_pessoa = p.id_pessoa WHERE p.idade BETWEEN 25 AND 35 GROUP BY m.nome_municipio ORDER BY renda_total DESC LIMIT 10;
-- Pergunta 1: Quais são os municípios na Região Nordeste com a menor média de idade entre as pessoas?
SELECT m.nome_municipio, AVG(p.idade)  FROM tb_pessoa p INNER JOIN tb_familia f ON p.id_familia = f.id_familia INNER JOIN tb_mun m ON f.cd_ibge = m.cd_ibge WHERE m.regiao = '2 - Nordeste' GROUP BY m.nome_municipio ORDER BY AVG(p.idade) ASC;
-- Qual a proporção de pessoas que utilizam abastecimento de água por poço ou nascente para todos os outros tipos e população total, além disso, e qual o tipo que predomina nas áreas urbanas?
SELECT      subquery.proporcao_nascente_outros,     subquery.proporcao_nascente_total,     subquery.tipo_abastecimento_predominante FROM      (     SELECT          ROUND(total_nascente / (total_rede + total_cisterna + total_outros), 2) AS proporcao_nascente_outros,         ROUND(total_nascente / (total_rede + total_cisterna + total_outros + total_nascente), 2) AS proporcao_nascente_total,         CASE              WHEN total_nascente_u >= total_rede_u AND total_nascente_u >= total_cisterna_u AND total_nascente_u >= total_outros_u THEN 'Nascente'             WHEN total_rede_u >= total_cisterna_u AND total_rede_u >= total_outros_u THEN 'Rede'             WHEN total_cisterna_u >= total_outros_u THEN 'Cisterna'             ELSE 'Outros'         END AS tipo_abastecimento_predominante     FROM          (         SELECT              (SELECT COUNT(*) * 1.0 FROM tb_pessoa              INNER JOIN tb_familia ON tb_familia.id_familia = tb_pessoa.id_familia              INNER JOIN tb_domicilio ON tb_domicilio.id_familia = tb_familia.id_familia              WHERE tb_domicilio.cod_abaste_agua_domic_fam = 2 AND tb_domicilio.cod_local_domic_fam = 1) AS total_nascente,                      (SELECT COUNT(*) * 1.0 FROM tb_pessoa              INNER JOIN tb_familia ON tb_familia.id_familia = tb_pessoa.id_familia              INNER JOIN tb_domicilio ON tb_domicilio.id_familia = tb_familia.id_familia              WHERE tb_domicilio.cod_abaste_agua_domic_fam = 1 AND tb_domicilio.cod_local_domic_fam = 1) AS total_rede,              (SELECT COUNT(*) * 1.0 FROM tb_pessoa              INNER JOIN tb_familia ON tb_familia.id_familia = tb_pessoa.id_familia              INNER JOIN tb_domicilio ON tb_domicilio.id_familia = tb_familia.id_familia              WHERE tb_domicilio.cod_abaste_agua_domic_fam = 3 AND tb_domicilio.cod_local_domic_fam = 1) AS total_cisterna,              (SELECT COUNT(*) * 1.0 FROM tb_pessoa              INNER JOIN tb_familia ON tb_familia.id_familia = tb_pessoa.id_familia              INNER JOIN tb_domicilio ON tb_domicilio.id_familia = tb_familia.id_familia              WHERE tb_domicilio.cod_abaste_agua_domic_fam = 4 AND tb_domicilio.cod_local_domic_fam = 1) AS total_outros,                      (SELECT COUNT(*) * 1.0 FROM tb_pessoa              INNER JOIN tb_familia ON tb_familia.id_familia = tb_pessoa.id_familia              INNER JOIN tb_domicilio ON tb_domicilio.id_familia = tb_familia.id_familia              WHERE tb_domicilio.cod_abaste_agua_domic_fam = 2 AND tb_domicilio.cod_local_domic_fam = 1) AS total_nascente_u,              (SELECT COUNT(*) * 1.0 FROM tb_pessoa              INNER JOIN tb_familia ON tb_familia.id_familia = tb_pessoa.id_familia              INNER JOIN tb_domicilio ON tb_domicilio.id_familia = tb_familia.id_familia              WHERE tb_domicilio.cod_abaste_agua_domic_fam = 1 AND tb_domicilio.cod_local_domic_fam = 1) AS total_rede_u,              (SELECT COUNT(*) * 1.0 FROM tb_pessoa              INNER JOIN tb_familia ON tb_familia.id_familia = tb_pessoa.id_familia              INNER JOIN tb_domicilio ON tb_domicilio.id_familia = tb_familia.id_familia              WHERE tb_domicilio.cod_abaste_agua_domic_fam = 3 AND tb_domicilio.cod_local_domic_fam = 1) AS total_cisterna_u,              (SELECT COUNT(*) * 1.0 FROM tb_pessoa              INNER JOIN tb_familia ON tb_familia.id_familia = tb_pessoa.id_familia              INNER JOIN tb_domicilio ON tb_domicilio.id_familia = tb_familia.id_familia              WHERE tb_domicilio.cod_abaste_agua_domic_fam = 4 AND tb_domicilio.cod_local_domic_fam = 1) AS total_outros_u         ) AS subquery     ) AS subquery;
-- Lista dos 30 município com o maior número de pessoas que nunca estudaram e têm 18 anos ou mais ordenados por quantidade:
SELECT tm.nome_municipio, COUNT(*) AS total_pessoas_nunca_estudaram FROM tb_pessoa tp INNER JOIN tb_familia tf ON tp.id_familia = tf.id_familia INNER JOIN tb_mun tm ON tf.cd_ibge = tm.cd_ibge INNER JOIN tb_esc te ON tp.id_pessoa = te.id_pessoa WHERE te.ind_frequenta_escola_memb = 4 AND tp.idade >= 18 GROUP BY tm.nome_municipio ORDER BY total_pessoas_nunca_estudaram DESC LIMIT 30;
-- 1 - Liste os nomes dos municípios onde a maioria dos residentes é do sexo feminino.
SELECT m.nome_municipio FROM tb_mun m JOIN tb_familia f ON m.cd_ibge = f.cd_ibge JOIN tb_pessoa p ON f.id_familia = p.id_familia GROUP BY m.nome_municipio HAVING SUM(CASE WHEN p.cod_sexo_pessoa = 2 THEN 1 ELSE 0 END) > SUM(CASE WHEN p.cod_sexo_pessoa = 1 THEN 1 ELSE 0 END);
--RETORNA SEPARADAMENTE HOMENS E MULHERES QUE A FAMILIA TEM UMA REDA MÉDIA ACIMA DE 500 REAIS
SELECT  ID_PESSOA, SUM(CASE WHEN COD_SEXO_PESSOA = 1 THEN 1 ELSE 0 END) AS HOMEM, SUM(CASE WHEN COD_SEXO_PESSOA = 2 THEN 1 ELSE 0 END) AS MULHER  FROM TB_PESSOA  WHERE ID_FAMILIA IN (SELECT ID_FAMILIA FROM TB_FAMILIA WHERE VLR_RENDA_MEDIA_FAM > '500')  GROUP BY   ID_PESSOA;
-- Em quais estados os principais ganhos de renda dos membros vêm de doações e excedem R$ 20.000, e qual é o total de renda de doação nesses estados?
SELECT m.uf, SUM(t.val_renda_doacao_memb) AS total_renda_doacao 	FROM tb_mun m 	JOIN tb_familia f ON m.cd_ibge = f.cd_ibge 	JOIN tb_trab t ON f.id_familia = t.id_familia 	WHERE t.cod_principal_trab_memb = 1 	GROUP BY m.uf 	HAVING SUM(t.val_renda_doacao_memb) > 20000 	ORDER BY total_renda_doacao ASC;
-- Faixa etária com mais pessoas em cada município.
with grupo_idades as ( select tm.uf, tm.nome_municipio, tp.idade, case when tp.idade <= 18 then '0-18' when tp.idade <= 25 then '19-25' when tp.idade <= 35 then '26-35' when tp.idade <= 25 then '36-55' when tp.idade <= 65 then '56-65' else '65+' end as grupo_idades from tb_mun as tm join tb_familia as tf on tm.cd_ibge = tf.cd_ibge join tb_pessoa as tp on tf.id_familia = tp.id_familia ) select uf, nome_municipio, grupo_idades, count(idade) as qtde from grupo_idades group by uf, nome_municipio, grupo_idades order by uf, nome_municipio, qtde desc;
-- Qual a Renda média familiar, salário, idade e escolaridade das pessoas que são maiores do que 25 anos e ainda frequentam a escola ou nunca frequentaram?
select fa.vlr_renda_media_fam as renda_media_familia,tb.val_remuner_emprego_memb as salario, a.idade,a.escolaridade from(select p.id_familia, p.id_pessoa, p.idade,(case e.ind_frequenta_escola_memb when 1 then 'Sim, rede pública' when 2 then 'Sim, rede particular' when 3 then 'Não, já frequentou' else 'Nunca frequentou' end) as escolaridade from tb_esc e inner join tb_pessoa p on p.id_pessoa=e.id_pessoa where p.idade > 25 and e.ind_frequenta_escola_memb in (1,2,4)) as a inner join tb_trab tb on a.id_familia=tb.id_familia inner join tb_familia fa on fa.id_familia=a.id_familia order by vlr_renda_media_fam desc;
-- Qual a média de pessoas que possuem coleta de lixo por região?
SELECT tb_mun.regiao AS "Região", ROUND(AVG(tb_familia.qtde_pessoas)) AS "Média de Pessoas" FROM tb_domicilio INNER JOIN tb_familia  ON tb_domicilio.id_familia = tb_familia.id_familia INNER JOIN tb_mun ON tb_familia.cd_ibge = tb_mun.cd_ibge WHERE tb_domicilio.cod_destino_lixo_domic_fam = 1 GROUP BY tb_mun.regiao;
-- Qual a média de renda das pessoas da familia por genero em cada estado?
SELECT m.uf,         CASE            WHEN p.cod_sexo_pessoa = 1 THEN 'Masculino'            WHEN p.cod_sexo_pessoa = 2 THEN 'Feminino'            ELSE 'Outro'        END AS sexo,        AVG(CAST(REPLACE(f.vlr_renda_media_fam, ',', '.') AS DECIMAL(10, 2))) AS media_renda FROM tb_pessoa p INNER JOIN tb_familia f ON p.id_familia = f.id_familia INNER JOIN tb_mun m ON f.cd_ibge = m.cd_ibge GROUP BY m.uf, sexo ORDER BY m.uf, sexo;
-- # Qual o curso mais elevado que as pessoas que não tiveram trabalho remunerado nos últimos 12 meses frequentaram? (ordenado por qauntidade de pessoas sem trabalho remunerado)
SELECT tb_esc.cod_curso_frequentou_pessoa_memb AS curso_mais_elevado_pessoa_frequentou, COUNT(*) AS qtd_pessoas_sem_trabalho_remunerado_ultimos_12meses FROM tb_trab INNER JOIN tb_esc ON tb_trab.id_pessoa = tb_esc.id_pessoa WHERE tb_trab.cod_trabalho_12_meses_memb = 2 GROUP BY tb_esc.cod_curso_frequentou_pessoa_memb ORDER BY qtd_pessoas_sem_trabalho_remunerado_ultimos_12meses;
-- Quais são os três municípios com o maior número de pessoas trabalhando e a média de renda das famílias nesses municípios?
SELECT m.nome_municipio,         COUNT(DISTINCT t.id_pessoa) as num_pessoas_trabalhando,         AVG(CAST(REPLACE(f.vlr_renda_media_fam, ',', '.') AS DECIMAL)) as media_renda FROM tb_mun m JOIN tb_familia f ON m.cd_ibge = f.cd_ibge JOIN tb_pessoa p ON f.id_familia = p.id_familia JOIN tb_trab t ON p.id_familia = t.id_familia AND p.id_pessoa = t.id_pessoa GROUP BY m.nome_municipio ORDER BY num_pessoas_trabalhando DESC LIMIT 3;
-- Pergunta 2: Qual é a renda média por família, considerando apenas as famílias com mais de 2 pessoas?
SELECT AVG(avg_renda_media) AS media_renda_familia FROM (     SELECT AVG(REPLACE(vlr_renda_media_fam, ',', '.')::numeric) AS avg_renda_media     FROM tb_familia     WHERE qtde_pessoas > 2     GROUP BY id_familia ) AS sub;